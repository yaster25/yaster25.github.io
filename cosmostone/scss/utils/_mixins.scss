@mixin transition($default-transition) {
  -webkit-transition: $default-transition;
     -moz-transition: $default-transition;
      -ms-transition: $default-transition;
		-o-transition: $default-transition;
           transition: $default-transition;
}

@mixin radius($border-radius) {
  -webkit-border-radius: $border-radius;
     -moz-border-radius: $border-radius;      
           border-radius:$border-radius;
}

@mixin rotate($rotate) {
  -webkit-transform: rotate($rotate);
     -moz-transform: rotate($rotate);
      -ms-transform: rotate($rotate);
		-o-transform: rotate($rotate);
           transform: rotate($rotate);
}

@mixin scale($scale) {
  -webkit-transform: scale($scale);
     -moz-transform: scale($scale);
      -ms-transform: scale($scale);
		-o-transform: scale($scale);
           transform: scale($scale);
}

@mixin shadow($shadow) {
  -webkit-box-shadow: ($shadow);
     -moz-box-shadow: ($shadow);
      -ms-box-shadow: ($shadow);
		-o-box-shadow: ($shadow);
           box-shadow: ($shadow);
}

@mixin gradient($aside,$aside-invert,$color1,$color2) {
    background: -moz-linear-gradient($aside, $color1 0%, $color2 100%);
	background: -webkit-linear-gradient($aside, $color1 0%,$color2 100%);
	background: -o-linear-gradient($aside, $color1 0%,$color2 100%);
	background: -ms-linear-gradient($aside, $color1 0%,$color2 100%);
	background: linear-gradient(to $aside-invert, $color1 0%,$color2 100%);	
}

@mixin center_transform() {
  	position:absolute;
	left:50%;top:50%;
	transform:translate(-50%, -50%);
	-moz-transform:translate(-50%, -50%);
	-webkit-transform:translate(-50%, -50%);
	-ms-transform:translate(-50%, -50%);
	-o-transform:translate(-50%, -50%);
}

@mixin vertical_center_transform() {
  	position:absolute;
	left:0;top:50%;
	width: 100%;
	transform:translate(0, -50%);
	-moz-transform:translate(0, -50%);
	-webkit-transform:translate(0, -50%);
	-ms-transform:translate(0, -50%);
	-o-transform:translate(0, -50%);
}

@mixin button($button-bg, $button-border, $button-border-color, $button-pad, $button-size, $button-line-height, $height-button, $button-radius) {
	display: inline-block;
	vertical-align: top;
	margin: 0 0 0 0;
	padding: 10px $button-pad 0 $button-pad;
	background: $button-bg;
	border: $button-border solid $button-border-color;
	font-size: $button-size;
	line-height: $button-line-height;
	height: $height-button;
	position: relative;
	border-radius: ($button-radius);
}

@mixin font($font-s, $font-h, $font-c) {
    font-size: $font-s;
    line-height: $font-h;
    color:$font-c;
}

@mixin counter($var){
	counter-reset: $var;
	> li
		&:before{
			content: counter($var);
			counter-increment: $var;
		}
}

@mixin placeholder-color($color){
	&:-moz-placeholder,
	&::-moz-placeholder{
		color: $color;
		opacity: 1;
	}
	&::-webkit-input-placeholder{
		color: $color;
	}
}

@mixin arr($width, $height, $bg, $direction){
	width: 0px;
	height: 0px;
	border-style: solid;
	@if $direction == t{
		border-width: 0 $width / 2 + px $height + px $width / 2 + px;
		border-color: transparent transparent $bg transparent;
	}
	@if $direction == r{
		border-width: $height / 2 + px 0 $height / 2 + px $width + px;
		border-color: transparent transparent transparent $bg;
	}
	@if $direction == b{
		border-width: $height + px $width / 2 + px 0 $width / 2 + px;
		border-color: $bg transparent transparent transparent;
	}
	@if $direction == l{
		border-width: $height / 2 + px $width + px $height / 2 + px 0;
		border-color: transparent $bg transparent transparent;
	}
	@if $direction == tl{
		border-width: $height + px $width + px 0 0;
		border-color: $bg transparent transparent transparent;
	}
	@if $direction == tr{
		border-width: 0 $width + px $height + px 0;
		border-color: transparent $bg transparent transparent;
	}
	@if $direction == br{
		border-width: 0 0 $height + px $width + px;
		border-color: transparent transparent $bg transparent;
	}
	@if $direction == bl{
		border-width: $height + px 0 0 $width + px;
		border-color: transparent transparent transparent $bg;
	}
}
@mixin text-overflow{
	overflow: hidden;
	-ms-text-overflow: ellipsis;
	text-overflow: ellipsis;
	white-space: nowrap;
}
@mixin vertical{
	text-align: center;
	font-size: 0;
	&:before{
		content: "";
		display: inline-block;
		vertical-align: middle;
		width: 0;
		height: 100%;
	}
}
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

/*задаём иконки с спрайта 
.icon-home{
  @include sprite($calendar);
 }
 */

@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    -moz-box-direction: reverse;
    -moz-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-box-direction: normal;
    -moz-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    -moz-box-direction: reverse;
    -moz-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-box-direction: normal;
    -moz-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
  // No Webkit/FF Box fallback.
  -webkit-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}
	
@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -moz-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  justify-content: $value;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -moz-box-align: start;
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -moz-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -moz-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  align-items: $value;
}

@mixin align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}